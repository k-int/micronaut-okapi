plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.0"
    id 'maven-publish'
}

apply plugin:"java"

version "0.1.1"
group "com.k_int.mn.okapi"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "http://maven.k-int.com/content/repositories/releases" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.0'
    }
}

ext {
    gormVersion = '6.1.9.RELEASE'
    un = project.hasProperty('kintMavenUser') ? project.kintMavenUser : null
    pw = project.hasProperty('kintMavenPassword') ? project.kintMavenPassword : null
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut.configuration:micronaut-postgres-reactive"
    compile "io.micronaut.configuration:micronaut-multitenancy-gorm"
    compile "io.micronaut.configuration:micronaut-hibernate-validator"
    compile "io.micronaut.configuration:micronaut-hibernate-gorm"
    compile "org.grails:grails-datastore-gorm-hibernate5:$gormVersion"
    compileOnly "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testCompile "junit:junit:4.12"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "org.hamcrest:hamcrest-all:1.3"
}

compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

publishing {
  publications {
    plugin(MavenPublication) {
      groupId "${group}"
      artifactId = 'micronaut-okapi'
      pom.withXml {
        def pomNode = asNode()
        pomNode.dependencyManagement.replaceNode {}

        // simply remove dependencies without a version
        // version-less dependencies are handled with dependencyManagement
        // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
        pomNode.dependencies.dependency.findAll {
          it.version.text().isEmpty()
        }.each {
          it.replaceNode {}
        }
      }
      from components.java
    }
  }

  if (un) {
    System.out.println("Found username for K-Int Maven repo '${un}'")
    repositories {
      maven {
        name "KIntPublic"
        // url "http://maven.k-int.com/content/repositories/private"
        url "http://nexus.k-int.com/content/repositories/releases/"
        credentials {
          username un
          password pw
        }
      }
    }
  }
}

